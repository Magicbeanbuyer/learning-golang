package db

import (
	"context"
	"database/sql"
)

/*
Store provides all individual db operation functions, as well as complete db transactions.

struct Queries generated by sqlc only supports individual db operations, but not db transactions.

ðŸš¨ COMPOSITION ðŸš¨
Composition is preferred over inheritance in Go.
By embedding struct Queries in struct Store, all methods of Queries are available to Store too.
*/
type Store struct {
	Queries *Queries
	db      *sql.DB
}

func NewStore(db *sql.DB) *Store {
	aStore := Store{
		Queries: New(db),
		db:      db,
	}
	return &aStore
}

func (s *Store) executeTransaction(context context.Context, fn func(*Queries) error) error {
	// question: what is a call back function
	tx, err := s.db.BeginTx(context, nil)
	if err != nil {
		return err
	}

	query := New(tx)
	return err
}
